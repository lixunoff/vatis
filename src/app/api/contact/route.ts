// app/api/contact/route.ts
import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest) {
  try {
    const { name, company, phone, message } = await request.json()

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è
    if (!name || !phone) {
      return NextResponse.json(
        { error: '–Ü–º\'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω —î –æ–±–æ–≤\'—è–∑–∫–æ–≤–∏–º–∏ –ø–æ–ª—è–º–∏' },
        { status: 400 }
      )
    }

    // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –Ω–∞ tovvatis@gmail.com —á–µ—Ä–µ–∑ Resend
    const resendApiKey = process.env.RESEND_API_KEY

    if (resendApiKey) {
      const emailHtml = `
        <h2 style="color: #183ae4;">–ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Å–∞–π—Ç—É –í–∞—Ç—ñ—Å</h2>
        <div style="background: #f5f5f5; padding: 20px; border-radius: 10px; margin: 20px 0;">
          <p><strong>üë§ –Ü–º'—è:</strong> ${name}</p>
          <p><strong>üè¢ –ö–æ–º–ø–∞–Ω—ñ—è:</strong> ${company || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
          <p><strong>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</strong> <a href="tel:${phone}">${phone}</a></p>
          <p><strong>üí¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</strong></p>
          <div style="background: white; padding: 15px; border-radius: 5px; margin-top: 10px;">
            ${message || '–ë–µ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è'}
          </div>
        </div>
        <hr style="margin: 30px 0;">
        <p style="color: #666; font-size: 14px;">
          üìÖ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∑ —Å–∞–π—Ç—É: ${new Date().toLocaleString('uk-UA', {
            timeZone: 'Europe/Kiev',
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
          })}
        </p>
      `

      const resendResponse = await fetch('https://api.resend.com/emails', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${resendApiKey}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          from: '–°–∞–π—Ç –í–∞—Ç—ñ—Å <onboarding@resend.dev>', // —Ç–∏–º—á–∞—Å–æ–≤–∏–π email –≤—ñ–¥ Resend
          to: ['tovvatis@gmail.com'],
          subject: `üîî –ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ ${name}`,
          html: emailHtml,
          reply_to: phone ? `${name} <noreply@resend.dev>` : undefined,
        }),
      })

      if (resendResponse.ok) {
        const result = await resendResponse.json()
        console.log('Email —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ tovvatis@gmail.com:', result.id)
        
        return NextResponse.json({ 
          success: true, 
          message: '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ tovvatis@gmail.com' 
        })
      } else {
        const errorData = await resendResponse.json()
        console.error('Resend API Error:', errorData)
        throw new Error('–ü–æ–º–∏–ª–∫–∞ Resend API')
      }
    } else {
      // –Ø–∫—â–æ –Ω–µ–º–∞—î API –∫–ª—é—á–∞ - –ª–æ–≥—É—î–º–æ –≤ –∫–æ–Ω—Å–æ–ª—å
      console.log('=== –ù–û–í–ï –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø –ù–ê tovvatis@gmail.com ===')
      console.log(`–í—ñ–¥: ${name}`)
      console.log(`–ö–æ–º–ø–∞–Ω—ñ—è: ${company || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}`)
      console.log(`–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`)
      console.log(`–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${message || '–ë–µ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è'}`)
      console.log(`–î–∞—Ç–∞: ${new Date().toLocaleString('uk-UA')}`)
      console.log('===========================================')

      return NextResponse.json({ 
        success: true, 
        message: '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ (–ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞)' 
      })
    }

  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –Ω–∞ tovvatis@gmail.com:', error)
    return NextResponse.json(
      { error: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –Ω–∞ tovvatis@gmail.com' },
      { status: 500 }
    )
  }
}